[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rufus-web-extractor"
version = "0.1.0"
description = "An AI-powered web data extraction tool for RAG systems"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Butchi Venkatesh Adari", email = "butchivenkatesh.a@gmail.com"}
]
keywords = ["web-scraping", "ai", "rag", "llm", "data-extraction"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
]

dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "openai>=1.3.0",
    "selenium>=4.15.0",
    "webdriver-manager>=4.0.0",
    "python-dotenv>=1.0.0",
    "robotexclusionrulesparser",
    "colorama",
    "langchain",
    "langchain-openai",
    "langchain_community",
    "chromadb",
    "sentence_transformers",
    "python-dotenv",
    "pyyaml",
    "ollama",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "mypy>=1.3.0",
    "black>=23.3.0",
    "isort>=5.12.0",
]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
]

[project.scripts]
rufus-web-extractor = "rufus.main:main"
rufus-api = "rufus.api:main"
rufus-gradio = "rufus.gradio_app:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test_*"

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true